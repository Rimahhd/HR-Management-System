openapi: "3.1.0"
info:
  title: "HR_Management_System API"
  description: "HR_Management_System API"
  version: "1.0.0"
servers:
  - url: "https://HR_Management_System"
paths:
  /HRManagementSystem/api/v1/employees/{id}:
    patch:
      summary: "PATCH HRManagementSystem/api/v1/employees/{id}"
      operationId: "updateEmployee"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              type: "string"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
    delete:
      summary: "DELETE HRManagementSystem/api/v1/employees/{id}"
      operationId: "deleteEmployee"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    get:
      summary: "GET HRManagementSystem/api/v1/employees/{id}"
      operationId: "getEmployee"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmployeeDTO"
  /HRManagementSystem/api/v1/employees:
    post:
      summary: "POST HRManagementSystem/api/v1/employees"
      operationId: "createEmployee"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /HRManagementSystem/api/v1/employees/all:
    get:
      summary: "GET HRManagementSystem/api/v1/employees/all"
      operationId: "getEmployees"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/EmployeeEntity"
  /HRManagementSystem/api/v1/employees/departments/{departmentId}/employees:
    get:
      summary: "GET HRManagementSystem/api/v1/employees/departments/{departmentId}/employees"
      operationId: "getEmployeesByDepartment"
      parameters:
        - name: "departmentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/EmployeeEntity"
  /HRManagementSystem/api/v1/expenses/expense-types:
    post:
      summary: "POST HRManagementSystem/api/v1/expenses/expense-types"
      operationId: "createExpenseType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpenseTypeEntity"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExpenseTypeEntity"
  /HRManagementSystem/api/v1/expenses/submit-expense:
    post:
      summary: "POST HRManagementSystem/api/v1/expenses/submit-expense"
      operationId: "submitExpense"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpenseClaimDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /HRManagementSystem/api/v1/expenses/total-claims:
    get:
      summary: "GET HRManagementSystem/api/v1/expenses/total-claims"
      operationId: "getTotalClaimsPerTypePerEmployee"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /HRManagementSystem/api/v1/leavetypes/leaveType/{id}:
    patch:
      summary: "PATCH HRManagementSystem/api/v1/leavetypes/leaveType/{id}"
      operationId: "updateLeaveType"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              type: "string"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
    get:
      summary: "GET HRManagementSystem/api/v1/leavetypes/leaveType/{id}"
      operationId: "getLeaveType"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LeaveTypeDTO"
  /HRManagementSystem/api/v1/leavetypes:
    post:
      summary: "POST HRManagementSystem/api/v1/leavetypes"
      operationId: "createLeaveType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LeaveTypeDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /HRManagementSystem/api/v1/leavetypes/delete/leaveType/{id}:
    delete:
      summary: "DELETE HRManagementSystem/api/v1/leavetypes/delete/leaveType/{id}"
      operationId: "deleteLeaveType"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /HRManagementSystem/api/v1/leavetypes/leaveType/all:
    get:
      summary: "GET HRManagementSystem/api/v1/leavetypes/leaveType/all"
      operationId: "getLeaveType"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/LeaveTypeEntity"
  /departments/departments/{id}:
    patch:
      summary: "PATCH departments/departments/{id}"
      operationId: "updateDepartment"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              type: "string"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
    delete:
      summary: "DELETE departments/departments/{id}"
      operationId: "deleteDepartment"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    get:
      summary: "GET departments/departments/{id}"
      operationId: "getDepartment"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DepartmentDTO"
  /departments/departments/create:
    post:
      summary: "POST departments/departments/create"
      operationId: "createDepartment"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepartmentDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /departments/departments/all:
    get:
      summary: "GET departments/departments/all"
      operationId: "getDepartments"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/DepartmentEntity"
  /HRManagementSystem/api/v1/leaves/update/leave/{id}:
    patch:
      summary: "PATCH HRManagementSystem/api/v1/leaves/update/leave/{id}"
      operationId: "updateEmployee"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              type: "string"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /HRManagementSystem/api/v1/leaves/create/leave/{id}:
    post:
      summary: "POST HRManagementSystem/api/v1/leaves/create/leave/{id}"
      operationId: "createEmployee"
      parameters:
        - name: "id"
          in: "path"
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /HRManagementSystem/api/v1/leaves/submit/leaves:
    post:
      summary: "POST HRManagementSystem/api/v1/leaves/submit/leaves"
      operationId: "submitLeaveRequest"
      parameters:
        - name: "employeeId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "leaveTypeId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "fromDate"
          in: "query"
          required: true
          schema:
            type: "string"
            format: "date"
        - name: "toDate"
          in: "query"
          required: true
          schema:
            type: "string"
            format: "date"
        - name: "note"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LeaveEntity"
  /HRManagementSystem/api/v1/leaves/delete/leave/{id}:
    delete:
      summary: "DELETE HRManagementSystem/api/v1/leaves/delete/leave/{id}"
      operationId: "deleteEmployee"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /HRManagementSystem/api/v1/leaves/get/leave/all:
    get:
      summary: "GET HRManagementSystem/api/v1/leaves/get/leave/all"
      operationId: "getEmployees"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/EmployeeEntity"
  /HRManagementSystem/api/v1/leaves/get/leave/{id}:
    get:
      summary: "GET HRManagementSystem/api/v1/leaves/get/leave/{id}"
      operationId: "getEmployee"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmployeeDTO"
  /HRManagementSystem/api/v1/leaves/employees/{employeeId}/leaves:
    get:
      summary: "GET HRManagementSystem/api/v1/leaves/employees/{employeeId}/leaves"
      operationId: "getLeavesByEmployeeAndDateRange"
      parameters:
        - name: "employeeId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "fromDate"
          in: "query"
          required: true
          schema:
            type: "string"
            format: "date"
        - name: "toDate"
          in: "query"
          required: true
          schema:
            type: "string"
            format: "date"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/LeaveEntity"
  /HRManagementSystem/api/v1/leaves/leaves:
    get:
      summary: "GET HRManagementSystem/api/v1/leaves/leaves"
      operationId: "getLeavesByTypeAndEmployee"
      parameters:
        - name: "leaveTypeId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "employeeId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "page"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "size"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LeaveEntity"
components:
  schemas:
    ApiResponse:
      type: "object"
      properties:
        message:
          type: "string"
    DepartmentDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
    EmployeeDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        address:
          type: "string"
        name:
          type: "string"
        email:
          type: "string"
        departmentId:
          type: "integer"
          format: "int64"
        departments:
          type: "array"
          items:
            $ref: "#/components/schemas/DepartmentDTO"
    EmployeeEntity:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        email:
          type: "string"
        address:
          type: "string"
        name:
          type: "string"
        departmentId:
          type: "integer"
          format: "int64"
    ExpenseTypeEntity:
      type: "object"
      properties:
        expenseTypeId:
          type: "integer"
          format: "int32"
        expenseTypeName:
          type: "string"
    ExpenseClaimDTO:
      type: "object"
      properties:
        ExpenseClaimId:
          type: "integer"
          format: "int32"
        ExpenseClaimDate:
          type: "string"
          format: "date"
        ExpenseClaimDescription:
          type: "string"
        ExpenseClaimTotal:
          type: "integer"
          format: "int32"
        ExpenseClaimStatus:
          type: "string"
        ExpenseClaimEmployeeId:
          type: "integer"
          format: "int32"
    LeaveTypeDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
    LeaveTypeEntity:
      type: "object"
      properties:
        leaveType:
          type: "string"
    DepartmentEntity:
      type: "object"
      properties:
        departmentId:
          type: "integer"
          format: "int32"
        departmentName:
          type: "string"
    LeaveEntity:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        employeeId:
          type: "integer"
          format: "int32"
        toDate:
          type: "string"
          format: "date"
        leaveType:
          type: "string"
        fromDate:
          type: "string"
          format: "date"